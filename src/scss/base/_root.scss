@use "../utilities" as *;
@use "../utilities/variables" as *;
@use "../utilities/colors" as *;
@use "../utilities/type-scale" as *;



:root {
    // Dark - Light mode
    --theme-mode: light;

    &.dark-theme {
        --theme-mode: dark;
    }

    // Fonts
    @each $font, $name in $fonts {
        --font-#{$font}: #{$name};
    }

    // Colors
    @each $color, $shades  in $colors {
        @if $color == "color-blue" {
            @each $shade, $value in $shades {
                --clr-primary-#{$shade}: #{$value};
            }
        }

        &.dark-theme {
            @if $color == "color-rose" {
                @each $shade, $value in $shades {
                    --clr-primary-#{$shade}: #{$value};
                }
            }
        }

        &.current-timer-mode-break {
            @if $color == "color-green" {
                @each $shade, $value in $shades {
                    --clr-primary-#{$shade}: #{$value};
                }
            }
        }

        &.dark-theme.current-timer-mode-break {
            @if $color == "color-purple" {
                @each $shade, $value in $shades {
                    --clr-primary-#{$shade}: #{$value};
                }
            }
        }

        @if $color == "neutral" {
            @each $shade, $value in $shades {
                --clr-neutral-#{$shade}: #{$value};
            }
        }
    }

   

    // Type-scale
    @each $screen-size, $font-size in $type-scale {
        @if $screen-size != medium {
            @each $size, $value in $font-size {
                --fs-#{$size}: #{$value};
            }
        } @else {
            @include respond-to(medium) {
                @each $size, $value in $font-size {
                    --fs-#{$size}: #{$value};
                }
            }
        }
    }

    // Shadows

    @each $name, $value in $shadows {
        --shw-#{$name}: #{$value};
    }
}